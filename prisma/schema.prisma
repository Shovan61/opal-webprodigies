// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  clerkId String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email String @unique
  firstName String?
  lastName String?
  image String?
  trial Boolean @default(false)
  studio Media?
  workspaces Workspace[]
  videos Video[]
}

enum Preset {
  HD
  SD
}
enum Type {
  PERSONAL
  PUBLIC
}

model Media {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  camera String?
  mic String?
  screen String?
  preset Preset @default(SD)
  User User? @relation(fields: [userId], references: [id])
  userId String? @unique @db.Uuid

}


model Workspace {
id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
name String
userID String @db.Uuid @unique
User User @relation(fields: [userID], references: [id])
type Type
videos Video[]
folders Folder[]
}

model Folder {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name String @default("Untitled Folder")
  createdAt DateTime @default(now())
  Workspace Workspace? @relation(fields: [workspaceId], references: [id])
  workspaceId String? @db.Uuid
  videos Video[]
}

model Video {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title String? @default("Untitled Video")
  description String? @default("No description")
  source String @unique
  createdAt DateTime @default(now())
  Folder Folder? @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId String? @db.Uuid
  User User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @db.Uuid
  proccessing Boolean @default(true)
  Workspace Workspace? @relation(fields: [workspaceId], references: [id])
  workspaceId String? @db.Uuid
  views Int @default(0)
  summery String?
}